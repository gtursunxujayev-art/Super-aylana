// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  tgId          String?         @unique
  username      String?         @unique
  passwordHash  String?
  balance       Int             @default(0)
  isAdmin       Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  wins          Win[]
  balanceEvents BalanceEvent[]
}

model Prize {
  id         String   @id @default(cuid())
  title      String
  coinCost   Int
  imageUrl   String?
  active     Boolean  @default(true)
  showInStore Boolean @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  wins       Win[]

  @@unique([title, coinCost])
}

model Win {
  id        String   @id @default(cuid())
  userId    String
  prizeId   String?
  title     String
  tier      Int      @default(0)
  createdAt DateTime @default(now())

  user   User  @relation(fields: [userId], references: [id])
  prize  Prize @relation(fields: [prizeId], references: [id])
}

model BalanceEvent {
  id        String   @id @default(cuid())
  userId    String
  delta     Int
  reason    String?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

/**
 * Global spin state. We keep defaults so prisma db push can run on existing rows.
 * Then app code can set these precisely at runtime.
 */
model SpinState {
  id          String   @id
  status      String   @default("IDLE")
  spinStartAt DateTime @default(now())
  durationMs  Int      @default(0)
  tier        Int      @default(0)
  userName    String   @default("")
  resultTitle String   @default("")
  updatedAt   DateTime @updatedAt
}