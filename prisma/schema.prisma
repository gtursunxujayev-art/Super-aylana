// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  username       String          @unique
  passwordHash   String?
  balance        Int             @default(0)
  isAdmin        Boolean         @default(false)
  tgId           String          @default("")        // was required with NULLs → give default
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  // relations
  wins           Win[]
  spins          Spin[]
  balanceEvents  BalanceEvent[]
}

model Prize {
  id          String   @id @default(uuid())
  title       String
  coinCost    Int
  imageUrl    String?
  active      Boolean  @default(true)
  showInStore Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([title, coinCost])
  wins        Win[]
}

model Spin {
  id        String   @id @default(uuid())
  userId    String
  tier      Int
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model Win {
  id         String   @id @default(uuid())
  userId     String
  prizeId    String?                              // OPTIONAL ← fixes earlier schema complaint
  title      String                               // what was won (text label)
  coinDelta  Int      @default(0)                 // +coins or -coins
  tier       Int      @default(50)                // 50 | 100 | 200
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
  prize      Prize?   @relation(fields: [prizeId], references: [id])
}

model SpinState {
  id          String   @id                        // use 'global'
  status      String                               // 'IDLE' | 'SPINNING'
  spinStartAt DateTime @default(now())             // give a safe default
  durationMs  Int      @default(0)                 // safe default
  tier        Int      @default(50)                // safe default
  userName    String   @default("")                // last spinner name (optional)
  resultTitle String   @default("")                // last result label (optional)
  updatedAt   DateTime @updatedAt
}

model BalanceEvent {
  id        String   @id @default(uuid())
  userId    String
  delta     Int
  reason    String?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}